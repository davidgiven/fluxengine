syntax = "proto2";

import "lib/decoders/decoders.proto";
import "lib/encoders/encoders.proto";
import "lib/imagereader/imagereader.proto";
import "lib/imagewriter/imagewriter.proto";
import "lib/fluxsource/fluxsource.proto";
import "lib/fluxsink/fluxsink.proto";
import "lib/usb/usb.proto";
import "lib/vfs/vfs.proto";
import "lib/drive.proto";
import "lib/common.proto";
import "lib/layout.proto";

// NEXT_TAG: 23
message ConfigProto
{
    optional string comment = 8;
    optional bool is_extension = 13;
    repeated string include = 19;

    optional LayoutProto layout = 18;

    optional ImageReaderProto image_reader = 12;
    optional ImageWriterProto image_writer = 9;

    optional FluxSourceProto flux_source = 10;
    optional FluxSinkProto flux_sink = 11;
    optional DriveProto drive = 15;

    optional EncoderProto encoder = 3;
    optional DecoderProto decoder = 4;
    optional UsbProto usb = 5;

    optional RangeProto tracks = 6;
    optional RangeProto heads = 7;
    optional int32 tpi = 16 [ (help) = "TPI of image; if 0, use TPI of drive" ];

    optional FilesystemProto filesystem = 17;

    repeated OptionProto option = 20;
	repeated OptionGroupProto option_group = 22;
}

// NEXT_TAG: 7
message OptionProto
{
    optional string name = 1 [ (help) = "option name" ];
    optional string comment = 2 [ (help) = "help text for option" ];
    optional string message = 3
        [ (help) = "message to display when option is in use" ];
	optional bool set_by_default = 6 [
		(help) = "this option is applied by default",
		default = false
	];
    optional ConfigProto config = 4
        [ (help) = "option data", (recurse) = false ];
}

message OptionGroupProto
{
	optional string comment = 1 [ (help) = "help text for option group" ];
	repeated OptionProto option = 2;
}

