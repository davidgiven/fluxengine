name: C/C++ CI

on: [push]

jobs:
  build-linux:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v1
    - name: apt
      run: sudo apt update && sudo apt install libudev-dev libsqlite3-dev protobuf-compiler libwxgtk3.0-gtk3-dev libfmt-dev
    - name: make
      run: CXXFLAGS="-Wp,-D_GLIBCXX_ASSERTIONS" make -j2

  build-macos-current:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: brew
      run: brew install sqlite pkg-config libusb protobuf wxwidgets fmt make coreutils dylibbundler libjpeg
    - name: make
      run: gmake -j2

    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ github.event.repository.name }}.${{ github.sha }}
        path: FluxEngine.pkg

  build-macos-10-15:
    runs-on: macos-10.15
    steps:
    - uses: actions/checkout@v2
    - name: brew
      run: brew install sqlite pkg-config libusb protobuf wxwidgets fmt make coreutils dylibbundler libjpeg
    - name: make
      run: |
        gmake -j2
        mv FluxEngine.pkg FluxEngine-10.15.pkg

    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ github.event.repository.name }}.${{ github.sha }}
        path: FluxEngine-10.15.pkg

  build-windows:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        update: true
        msystem: MINGW32
        install: >-
          diffutils
          make
          mingw-w64-i686-fmt
          mingw-w64-i686-gcc
          mingw-w64-i686-libusb
          mingw-w64-i686-pkg-config
          mingw-w64-i686-protobuf
          mingw-w64-i686-sqlite3
          mingw-w64-i686-wxWidgets
          mingw-w64-i686-zlib
          mingw-w64-i686-nsis
          zip
    - uses: actions/checkout@v1
    - name: build
      run: make -j2

    - name: nsis
      run: |
        strip fluxengine.exe -o fluxengine-stripped.exe
        strip fluxengine-gui.exe -o fluxengine-gui-stripped.exe
        makensis -v2 -nocd -dOUTFILE=fluxengine-installer.exe extras/windows-installer.nsi

    - name: zip
      run: |
        zip -9 fluxengine-windows.zip fluxengine.exe fluxengine-gui.exe upgrade-flux-file.exe brother120tool.exe brother240tool.exe FluxEngine.cydsn/CortexM3/ARM_GCC_541/Release/FluxEngine.hex fluxengine-installer.exe

    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ github.event.repository.name }}.${{ github.sha }}
        path: fluxengine-windows.zip
